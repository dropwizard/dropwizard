name: Trigger Release
on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Version of the next release'
        required: true
      developmentVersion:
        description: 'Version of the next development cycle (must end in "-SNAPSHOT")'
        required: true
jobs:
  trigger-release:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: write
    env:
      JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
      CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
      CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    steps:
    - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
    - name: Set up JDK
      uses: actions/setup-java@3f07048e3d294f56e9b90ac5ea2c6f74e9ad0f98 # v3
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'maven'
        server-id: ossrh
        server-username: CI_DEPLOY_USERNAME
        server-password: CI_DEPLOY_PASSWORD
        gpg-passphrase: GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
    - name: Set up Git
      run: |
        git config --global committer.email "noreply@github.com"
        git config --global committer.name "GitHub Release"
        git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global author.name "${GITHUB_ACTOR}"
    - name: Prepare release
      run: ./mvnw -V -B -ntp -Prelease -DreleaseVersion=${{ inputs.releaseVersion }} -DdevelopmentVersion=${{ inputs.developmentVersion }} release:prepare
    - name: Rollback on failure
      if: failure()
      run: |
        ./mvnw -B release:rollback -Prelease
        echo "You may need to manually delete the GitHub tag, if it was created."
