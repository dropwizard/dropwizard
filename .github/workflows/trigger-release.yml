name: Trigger Release
on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Version of the next release'
        required: true
      developmentVersion:
        description: 'Version of the next development cycle (must end in "-SNAPSHOT")'
        required: true
      jreleaser:
        description: If this release should automatically be published and announced
        required: false
        type: boolean
        default: true
jobs:
  trigger-release:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: write
    env:
      JAVA_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
    steps:
    - uses: webfactory/ssh-agent@d4b9b8ff72958532804b70bbe600ad43b36d5f2e # v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Set up JDK
      uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2 # v3
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: 'maven'
        server-id: ossrh
        server-username: ${{ secrets.CI_DEPLOY_USERNAME }}
        server-password: ${{ secrets.CI_DEPLOY_PASSWORD }}
        gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
    - name: Set up Git
      run: |
        git config --global committer.email "48418865+dropwizard-committers@users.noreply.github.com"
        git config --global committer.name "Dropwizard Release Action"
        git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global author.name "${GITHUB_ACTOR}"
    - name: Prepare release
      id: prepare
      run: ./mvnw -V -B -ntp -Prelease -DreleaseVersion=${{ inputs.releaseVersion }} -DdevelopmentVersion=${{ inputs.developmentVersion }} release:prepare
    - name: Rollback on failure
      if: failure()
      run: |
        ./mvnw -B release:rollback -Prelease
        echo "You may need to manually delete the GitHub tag, if it was created."
    - name: JReleaser
      if: ${{ steps.prepare.conclusion == 'success' && inputs.jreleaser == 'true' }}
      id: jreleaser
      uses: jreleaser/release-action@v2
      with:
        arguments: full-release
      env:
        JRELEASER_PROJECT_VERSION: ${{ inputs.releaseVersion }}
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_GITHUB_USERNAME: ${{ github.actor }}
        JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        JRELEASER_MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
    - name: JReleaser release output
      if: ${{ always() && steps.jreleaser.conclusion != 'skipped' }}
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3
      with:
        name: jreleaser-release
        path: |
          out/jreleaser/trace.log
          out/jreleaser/output.properties
